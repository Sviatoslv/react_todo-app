{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onSubmit","handleSubmit","placeholder","name","onChange","handleType","value","todoValue","TodoItem","classes","todo","completed","id","editingId","onDoubleClick","handleEdit","type","checked","onClick","handleItem","htmlFor","title","todoEditValue","handleTypeEdit","Main","todoItems","currentArr","map","components_TodoItem","key","style","display","allCompleted","handleAllCompleted","Footer","sortState","handleSort","handleDestroyComleted","todoItemsArr","itemsLeft","filter","item","length","numberOfComleted","footerClass","href","undefined","App","state","event","_this","setState","target","prevState","preventDefault","editInput","some","Object","toConsumableArray","todoObj","concat","localStorage","setItem","JSON","stringify","components_Header","this","components_Main","components_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3d93f6aa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={props.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          name=\"title\"\n\n          onChange={props.handleType}\n          value={props.todoValue}\n        />\n      </form>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleType: PropTypes.func.isRequired,\n  todoValue: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  let classes = ' ';\n\n  if (props.todo.completed) {\n    classes = 'completed';\n  }\n\n  if (props.todo.id === props.editingId) {\n    classes += ' editing';\n  }\n\n  return (\n    <li\n      onDoubleClick={() => props.handleEdit(props.todo.id)}\n      className={classes}\n    >\n      <div>\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={props.todo.completed}\n          onClick={() => props.handleItem(props.todo.id, 'completed')}\n        />\n\n        <label\n          className=\"view\"\n          htmlFor=\"todo-1\"\n        >\n          {props.todo.title}\n        </label>\n\n        <form onSubmit={props.handleSubmit}>\n          <input\n            name=\"editInput\"\n            className=\"edit\"\n            type=\"text\"\n            value={props.todoEditValue}\n            onChange={props.handleTypeEdit}\n          />\n        </form>\n\n        <button\n          onClick={() => props.handleItem(props.todo.id, 'destroy')}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n\n  handleItem: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n\n  todoEditValue: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleTypeEdit: PropTypes.func.isRequired,\n  editingId: PropTypes.string.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction Main(props) {\n  const todoItems = props.currentArr.map(todo => (\n    <TodoItem\n      todo={todo}\n      key={todo.id}\n\n      handleItem={props.handleItem}\n      handleEdit={props.handleEdit}\n\n      todoEditValue={props.todoEditValue}\n      handleSubmit={props.handleSubmit}\n      handleTypeEdit={props.handleTypeEdit}\n      editingId={props.editingId}\n    />\n  ));\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={props.allCompleted}\n        onChange={props.handleAllCompleted}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todoItems}\n      </ul>\n    </section>\n  );\n}\n\nMain.propTypes = {\n  currentArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleItem: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleAllCompleted: PropTypes.func.isRequired,\n  allCompleted: PropTypes.bool.isRequired,\n\n  handleTypeEdit: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n\n  todoEditValue: PropTypes.string.isRequired,\n  editingId: PropTypes.string.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Footer(props) {\n  const {\n    sortState, handleSort, handleDestroyComleted, todoItemsArr,\n  } = props;\n\n  const itemsLeft = todoItemsArr\n    .filter(item => !item.completed).length;\n\n  const numberOfComleted = todoItemsArr\n    .filter(item => item.completed).length;\n\n  let footerClass = 'footer';\n\n  if (todoItemsArr.length < 1) {\n    footerClass += ' hidden';\n  }\n\n  return (\n    <footer className={footerClass}>\n      <span className=\"todo-count\">\n        {itemsLeft}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            onClick={() => handleSort('All')}\n            href=\"#/\"\n            className={sortState === 'All' ? 'selected' : undefined}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handleSort('Active')}\n            href=\"#/active\"\n            className={sortState === 'Active'\n              ? 'selected' : undefined}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handleSort('Completed')}\n            href=\"#/completed\"\n            className={sortState === 'Completed'\n              ? 'selected' : undefined}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: numberOfComleted ? 'block' : 'none' }}\n        onClick={handleDestroyComleted}\n      >\n        {' '}\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  sortState: PropTypes.string.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleDestroyComleted: PropTypes.func.isRequired,\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todoItemsArr: [],\n    currentArr: [],\n    todoValue: '',\n    todoEditValue: '',\n    sortState: 'All',\n    editingId: '',\n    allCompleted: false,\n  }\n\n  handleType = (event) => {\n    this.setState({\n      todoValue: event.target.value,\n    });\n  };\n\n  handleTypeEdit = (event) => {\n    this.setState({\n      todoEditValue: event.target.value,\n    });\n  };\n\n  handleAllCompleted = (event) => {\n    if (this.state.allCompleted) {\n      this.setState(prevState => ({\n        todoItemsArr: prevState.todoItemsArr.map((todo) => {\n          todo.completed = false;\n          return todo;\n        }),\n        allCompleted: !prevState.allCompleted,\n      }));\n    } else {\n      (\n        this.setState(prevState => ({\n          todoItemsArr: prevState.todoItemsArr.map((todo) => {\n            todo.completed = true;\n            return todo;\n          }),\n          allCompleted: !prevState.allCompleted,\n        }))\n      );\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (event.target.editInput) {\n      if (this.state.todoEditValue\n        && !this.state.todoItemsArr\n          .some(item => (item.title === this.state.todoEditValue))) {\n        this.setState(prevState => ({\n          todoItemsArr: prevState.todoItemsArr.map((todo) => {\n            if (todo.id === prevState.editingId) {\n              todo.title = prevState.todoEditValue;\n            }\n\n            return todo;\n          }),\n\n          currentArr: [...prevState.todoItemsArr],\n          sortState: 'All',\n        }));\n      }\n    }\n\n    const todoObj = {\n      title: this.state.todoValue,\n      id: `${this.state.todoValue}-${this.state.todoItemsArr.length}`,\n      completed: false,\n    };\n\n    if (this.state.todoValue\n      && !this.state.todoItemsArr\n        .some(item => item.title === this.state.todoValue)) {\n      localStorage.setItem(\n        'array', JSON.stringify([...this.state.todoItemsArr, todoObj])\n      );\n\n      this.setState(prevState => ({\n        todoItemsArr: [...prevState.todoItemsArr, todoObj],\n        todoValue: '',\n        currentArr: [...prevState.todoItemsArr, todoObj],\n        editingId: '',\n        sortState: 'All',\n      }));\n    } else {\n      this.setState(prevState => ({\n        todoValue: prevState.value,\n        editingId: '',\n      }));\n    }\n  }\n\n  handleItem = (id, type) => {\n    switch (type) {\n      case 'destroy':\n        return (\n          this.setState(prevState => ({\n            todoItemsArr: prevState.todoItemsArr.filter(item => item.id !== id),\n            currentArr: prevState.todoItemsArr.filter(item => item.id !== id),\n          })));\n\n      case 'completed':\n        return (\n          this.setState(prevState => ({\n            todoItemsArr: [...prevState.todoItemsArr].map((item) => {\n              item.id === id && (item.completed = !item.completed);\n              return item;\n            }),\n          })));\n\n      default:\n        return this.state.currentArr;\n    }\n  }\n\n  handleDestroyComleted = () => {\n    this.setState(prevState => ({\n      todoItemsArr: prevState.todoItemsArr.filter(item => !item.completed),\n      currentArr: prevState.todoItemsArr.filter(item => !item.completed),\n    }));\n  }\n\n  handleSort = (state) => {\n    switch (state) {\n      case 'Active':\n        return (\n          this.setState(prevState => ({\n            currentArr: [...prevState.todoItemsArr]\n              .filter(item => !item.completed),\n            sortState: 'Active',\n          })));\n\n      case 'Completed':\n        return (\n          this.setState(prevState => ({\n            currentArr: [...prevState.todoItemsArr]\n              .filter(item => item.completed),\n            sortState: 'Completed',\n          })));\n\n      default:\n        return (\n          this.setState(prevState => ({\n            currentArr: prevState.todoItemsArr,\n            sortState: 'All',\n          })));\n    }\n  }\n\n  handleEdit = (id) => {\n    this.setState(prevState => ({\n      editingId: id,\n      todoEditValue: prevState.currentArr\n        .filter(todo => todo.id === id).map(todo => todo.title),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          handleType={this.handleType}\n          handleSubmit={this.handleSubmit}\n          todoValue={this.state.todoValue}\n        />\n\n        <Main\n          currentArr={this.state.currentArr}\n\n          handleAllCompleted={this.handleAllCompleted}\n          allCompleted={this.state.allCompleted}\n          handleItem={this.handleItem}\n          handleEdit={this.handleEdit}\n\n          handleTypeEdit={this.handleTypeEdit}\n          handleSubmit={this.handleSubmit}\n\n          todoEditValue={this.state.todoEditValue}\n          editingId={this.state.editingId}\n        />\n\n        <Footer\n          todoItemsArr={this.state.todoItemsArr}\n\n          handleSort={this.handleSort}\n          handleDestroyComleted={this.handleDestroyComleted}\n\n          sortState={this.state.sortState}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}