{"version":3,"sources":["components/Header.js","components/Footer.js","components/TodoItem.js","App.js","index.js"],"names":["Header","state","todoValue","handleType","event","_this","setState","target","value","handleSubmit","preventDefault","_this$props","props","todos","writeNewTodo","newTodo","title","id","completed","isExistingAndUnique","this","react_default","a","createElement","className","onSubmit","name","onChange","placeholder","React","Component","classNames","require","Footer","filterState","handlefilter","destroyAllComleted","itemsLeft","filter","item","length","footerClass","footer","hidden","allButtonClass","selected","activeButtonClass","completedButtonClass","clearComletedClass","clear-completed","some","onClick","href","type","TodoItem","todoEditValue","isTodoEditing","handleEdit","todo","handleTypeEdit","rewriteExistingTodo","_this$props2","toggleComplete","destroyItem","_this$state","todoItemClasses","editing","onDoubleClick","checked","htmlFor","getCashedFilteredTodos","callback","prevArgs","prevValue","_len","arguments","args","Array","_key","every","arg","i","cashedFilteredTodos","App","allCompleted","handleAllCompleted","prevState","map","Object","objectSpread","concat","toConsumableArray","arr","_this2","filteredtodos","components_Header","style","display","components_TodoItem","key","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.51737a63.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state={\n    todoValue: '',\n  }\n\n  handleType = (event) => {\n    this.setState({\n      todoValue: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { todoValue } = this.state;\n    const { todos, writeNewTodo, isExistingAndUnique } = this.props;\n\n    const newTodo = {\n      title: todoValue,\n      id: todoValue,\n      completed: false,\n    };\n\n    if (isExistingAndUnique(todoValue, todos)) {\n      writeNewTodo(newTodo);\n\n      this.setState({\n        todoValue: '',\n      });\n    }\n  }\n\n  render() {\n    const { todoValue } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <input\n            name=\"title\"\n            value={todoValue}\n            onChange={this.handleType}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  writeNewTodo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isExistingAndUnique: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nfunction Footer(props) {\n  const {\n    filterState, handlefilter, destroyAllComleted, todos,\n  } = props;\n\n  const itemsLeft = todos\n    .filter(item => !item.completed).length;\n\n  const footerClass = classNames({\n    footer: true,\n    hidden: (todos.length < 1),\n  });\n\n  const allButtonClass = classNames({\n    selected: filterState === 'All',\n  });\n\n  const activeButtonClass = classNames({\n    selected: filterState === 'Active',\n  });\n\n  const completedButtonClass = classNames({\n    selected: filterState === 'Completed',\n  });\n\n  const clearComletedClass = classNames({\n    'clear-completed': true,\n    hidden: !todos.some(item => item.completed),\n  });\n\n  return (\n    <footer className={footerClass}>\n      <span className=\"todo-count\">\n        {itemsLeft}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            onClick={() => handlefilter('All')}\n            href=\"#/\"\n            className={allButtonClass}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handlefilter('Active')}\n            href=\"#/active\"\n            className={activeButtonClass}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handlefilter('Completed')}\n            href=\"#/completed\"\n            className={completedButtonClass}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className={clearComletedClass}\n        onClick={destroyAllComleted}\n      >\n        {' '}\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  filterState: PropTypes.string.isRequired,\n  handlefilter: PropTypes.func.isRequired,\n  destroyAllComleted: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nclass TodoItem extends React.Component {\n  state={\n    todoEditValue: '',\n    isTodoEditing: false,\n  }\n\n  handleEdit = () => {\n    this.setState({\n      isTodoEditing: true,\n      todoEditValue: this.props.todo.title,\n    });\n  }\n\n  handleTypeEdit = (event) => {\n    this.setState({\n      todoEditValue: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { todos, rewriteExistingTodo, isExistingAndUnique } = this.props;\n    const { todoEditValue } = this.state;\n\n    if (isExistingAndUnique(todoEditValue, todos)) {\n      rewriteExistingTodo(todoEditValue, this.props.todo.id);\n\n      this.setState({\n        todoEditValue: '',\n      });\n    }\n\n    this.setState({\n      isTodoEditing: false,\n    });\n  }\n\n  render() {\n    const { todo, toggleComplete, destroyItem } = this.props;\n    const { isTodoEditing, todoEditValue } = this.state;\n\n    const todoItemClasses = classNames({\n      completed: todo.completed,\n      editing: isTodoEditing,\n    });\n\n    return (\n      <li className={todoItemClasses}>\n        <div onDoubleClick={this.handleEdit}>\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={() => toggleComplete(todo.id)}\n          />\n\n          <label\n            className=\"view\"\n            htmlFor=\"todo-1\"\n          >\n            {todo.title}\n          </label>\n\n          <form onSubmit={this.handleSubmit}>\n            <input\n              name=\"editInput\"\n              className=\"edit\"\n              type=\"text\"\n              value={todoEditValue}\n              onChange={this.handleTypeEdit}\n            />\n          </form>\n\n          <button\n            onClick={() => destroyItem(todo.id)}\n            type=\"button\"\n            className=\"destroy\"\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  destroyItem: PropTypes.func.isRequired,\n  rewriteExistingTodo: PropTypes.func.isRequired,\n  isExistingAndUnique: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport TodoItem from './components/TodoItem';\n\nconst cashedFilteredTodos = (callback) => {\n  let prevArgs = [];\n  let prevValue = [];\n\n  return (...args) => {\n    if (args.every((arg, i) => arg === prevArgs[i])) {\n      return prevValue;\n    }\n\n    const [todos, state] = args;\n    prevArgs = args;\n    prevValue = callback(todos, state);\n\n    return prevValue;\n  };\n};\n\nconst getfilteredTodos = (todos, state) => {\n  const filteredTodos = todos.filter((item) => {\n    switch (state) {\n      case 'Active':\n        return !item.completed;\n\n      case 'Completed':\n        return item.completed;\n\n      default:\n        return item;\n    }\n  });\n\n  return filteredTodos;\n};\n\nconst getCashedFilteredTodos = cashedFilteredTodos(getfilteredTodos);\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filterState: 'All',\n    allCompleted: false,\n  }\n\n  handleAllCompleted = (event) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        { ...todo, completed: !prevState.allCompleted }\n      )),\n      allCompleted: !prevState.allCompleted,\n      filterState: 'All',\n    }));\n  }\n\n  writeNewTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todos: [newTodo, ...prevState.todos],\n      filterState: 'All',\n    }));\n  }\n\n  rewriteExistingTodo = (title, id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          todo = { ...todo, title };\n        }\n        return todo;\n      }),\n    }));\n  }\n\n  toggleComplete = id => (\n    this.setState(prevState => ({\n      todos: prevState.todos.map((item) => {\n        item.id === id\n        && (item = { ...item, completed: !item.completed });\n\n        return item;\n      }),\n\n      filterState: 'All',\n    })));\n\n  destroyItem = id => (\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(item => item.id !== id),\n      filterState: 'All',\n    })));\n\n  destroyAllComleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(item => (!item.completed)),\n\n      allCompleted: false,\n      filterState: 'All',\n    }));\n  }\n\n  handlefilter = (state) => {\n    this.setState(prevState => ({\n      filterState: state,\n    }));\n  }\n\n  isExistingAndUnique = (value, arr) => {\n    if (value && !arr.some(item => item.title === value)) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const {\n      allCompleted, todos, filterState,\n    } = this.state;\n\n    const filteredtodos = getCashedFilteredTodos([...todos], filterState);\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          writeNewTodo={this.writeNewTodo}\n          todos={todos}\n          isExistingAndUnique={this.isExistingAndUnique}\n        />\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={allCompleted}\n            onChange={this.handleAllCompleted}\n          />\n\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {filteredtodos.map(todo => (\n              <TodoItem\n                todos={todos}\n                todo={todo}\n                key={todo.id}\n\n                toggleComplete={this.toggleComplete}\n                destroyItem={this.destroyItem}\n                rewriteExistingTodo={this.rewriteExistingTodo}\n                isExistingAndUnique={this.isExistingAndUnique}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <Footer\n          todos={todos}\n          handlefilter={this.handlefilter}\n          destroyAllComleted={this.destroyAllComleted}\n          filterState={filterState}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}