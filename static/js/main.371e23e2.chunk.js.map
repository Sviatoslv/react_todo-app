{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/TodoItems.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onSubmit","handleSubmit","placeholder","name","onChange","handleType","value","todoValue","TodoItem","classes","todo","completed","id","editingId","onDoubleClick","handleEdit","type","checked","handleItem","htmlFor","title","handleSubmitEdit","todoEditValue","handleTypeEdit","onClick","TodoItems","currentArr","todoItemsArr","sortState","sortedTodoItemsArr","map","components_TodoItem","key","Main","todoItems","components_TodoItems","style","display","allCompleted","handleAllCompleted","Footer","handleSort","handleDestroyComleted","itemsLeft","filter","item","length","numberOfComleted","footerClass","href","undefined","App","state","event","_this","setState","target","prevState","Object","objectSpread","isExistingAndUnique","arr","some","preventDefault","todoObj","concat","toConsumableArray","find","components_Header","this","components_Main","components_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.371e23e2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={props.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          name=\"title\"\n          onChange={props.handleType}\n          value={props.todoValue}\n        />\n      </form>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleType: PropTypes.func.isRequired,\n  todoValue: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  let classes = ' ';\n\n  if (props.todo.completed) {\n    classes = 'completed';\n  }\n\n  if (props.todo.id === props.editingId) {\n    classes += ' editing';\n  }\n\n  return (\n    <li\n      onDoubleClick={() => props.handleEdit(props.todo.id)}\n      className={classes}\n    >\n      <div>\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={props.todo.completed}\n          onChange={() => props.handleItem(props.todo.id, 'completed')}\n        />\n\n        <label\n          className=\"view\"\n          htmlFor=\"todo-1\"\n        >\n          {props.todo.title}\n        </label>\n\n        <form onSubmit={props.handleSubmitEdit}>\n          <input\n            name=\"editInput\"\n            className=\"edit\"\n            type=\"text\"\n            value={props.todoEditValue}\n            onChange={props.handleTypeEdit}\n          />\n        </form>\n\n        <button\n          onClick={() => props.handleItem(props.todo.id, 'destroy')}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n\n  handleItem: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n\n  todoEditValue: PropTypes.string.isRequired,\n  handleSubmitEdit: PropTypes.func.isRequired,\n  handleTypeEdit: PropTypes.func.isRequired,\n  editingId: PropTypes.string.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoItems = (props) => {\n  let currentArr = props.todoItemsArr;\n\n  if (props.sortState === 'Completed' || props.sortState === 'Active') {\n    currentArr = props.sortedTodoItemsArr;\n  }\n\n  const todoItem = currentArr.map(todo => (\n    <TodoItem\n      todo={todo}\n      key={todo.id}\n\n      handleItem={props.handleItem}\n      handleEdit={props.handleEdit}\n\n      todoEditValue={props.todoEditValue}\n      handleSubmitEdit={props.handleSubmitEdit}\n      handleTypeEdit={props.handleTypeEdit}\n      editingId={props.editingId}\n    />\n  ));\n\n  return (todoItem);\n};\n\nTodoItems.propTypes = {\n  sortedTodoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleItem: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n\n  handleTypeEdit: PropTypes.func.isRequired,\n  handleSubmitEdit: PropTypes.func.isRequired,\n\n  todoEditValue: PropTypes.string.isRequired,\n  editingId: PropTypes.string.isRequired,\n};\n\nexport default TodoItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItems from './TodoItems';\n\nfunction Main(props) {\n  const todoItems = (\n    <TodoItems\n      sortState={props.sortState}\n      todoItemsArr={props.todoItemsArr}\n      sortedTodoItemsArr={props.sortedTodoItemsArr}\n\n      handleItem={props.handleItem}\n      handleEdit={props.handleEdit}\n\n      todoEditValue={props.todoEditValue}\n      handleSubmitEdit={props.handleSubmitEdit}\n      handleTypeEdit={props.handleTypeEdit}\n      editingId={props.editingId}\n    />\n  );\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={props.allCompleted}\n        onChange={props.handleAllCompleted}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todoItems}\n      </ul>\n    </section>\n  );\n}\n\nMain.propTypes = {\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortedTodoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortState: PropTypes.string.isRequired,\n  handleItem: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleAllCompleted: PropTypes.func.isRequired,\n  allCompleted: PropTypes.bool.isRequired,\n\n  handleTypeEdit: PropTypes.func.isRequired,\n  handleSubmitEdit: PropTypes.func.isRequired,\n\n  todoEditValue: PropTypes.string.isRequired,\n  editingId: PropTypes.string.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Footer(props) {\n  const {\n    sortState, handleSort, handleDestroyComleted, todoItemsArr,\n  } = props;\n\n  const itemsLeft = todoItemsArr\n    .filter(item => !item.completed).length;\n\n  const numberOfComleted = todoItemsArr\n    .filter(item => item.completed).length;\n\n  let footerClass = 'footer';\n\n  if (todoItemsArr.length < 1) {\n    footerClass += ' hidden';\n  }\n\n  return (\n    <footer className={footerClass}>\n      <span className=\"todo-count\">\n        {itemsLeft}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            onClick={() => handleSort('All')}\n            href=\"#/\"\n            className={sortState === 'All' ? 'selected' : undefined}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handleSort('Active')}\n            href=\"#/active\"\n            className={sortState === 'Active'\n              ? 'selected' : undefined}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handleSort('Completed')}\n            href=\"#/completed\"\n            className={sortState === 'Completed'\n              ? 'selected' : undefined}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: numberOfComleted ? 'block' : 'none' }}\n        onClick={handleDestroyComleted}\n      >\n        {' '}\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  sortState: PropTypes.string.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleDestroyComleted: PropTypes.func.isRequired,\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todoItemsArr: [],\n    sortedTodoItemsArr: [],\n    todoValue: '',\n    todoEditValue: '',\n    sortState: 'All',\n    editingId: '',\n    allCompleted: false,\n  }\n\n  handleType = (event) => {\n    this.setState({\n      todoValue: event.target.value,\n    });\n  };\n\n  handleTypeEdit = (event) => {\n    this.setState({\n      todoEditValue: event.target.value,\n    });\n  };\n\n  handleAllCompleted = (event) => {\n    this.setState(prevState => ({\n      todoItemsArr: prevState.todoItemsArr.map(todo => (\n        { ...todo, completed: !prevState.allCompleted }\n      )),\n      allCompleted: !prevState.allCompleted,\n    }));\n  }\n\n  isExistingAndUnique = (value, arr) => {\n    if (value && !arr.some(item => item.title === value)) {\n      return true;\n    }\n    return false;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const todoObj = {\n      title: this.state.todoValue,\n      id: this.state.todoValue,\n      completed: false,\n    };\n\n    this.setState((prevState) => {\n      if (this.isExistingAndUnique(\n        prevState.todoValue,\n        prevState.todoItemsArr\n      )) {\n        return ({\n          todoItemsArr: [todoObj, ...prevState.todoItemsArr],\n          todoValue: '',\n          editingId: '',\n          sortState: 'All',\n        });\n      }\n      return ({\n        todoValue: prevState.todoValue,\n        editingId: '',\n      });\n    });\n  }\n\n  handleSubmitEdit = (event) => {\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      if (this.isExistingAndUnique(\n        prevState.todoEditValue,\n        prevState.todoItemsArr\n      )) {\n        return ({\n          todoItemsArr: prevState.todoItemsArr.map((todo) => {\n            if (todo.id === prevState.editingId) {\n              todo = { ...todo, title: prevState.todoEditValue };\n            }\n            return todo;\n          }),\n          todoEditValue: '',\n          editingId: '',\n          sortState: 'All',\n        });\n      }\n      return ({\n        todoEditValue: prevState.todoEditValue,\n        editingId: '',\n      });\n    });\n  }\n\n  handleItem = (id, type) => {\n    switch (type) {\n      case 'destroy':\n        return (\n          this.setState(prevState => ({\n            todoItemsArr: prevState.todoItemsArr.filter(item => item.id !== id),\n            sortState: 'All',\n          })));\n\n      case 'completed':\n        return (\n          this.setState(prevState => ({\n            todoItemsArr: prevState.todoItemsArr.map((item) => {\n              item.id === id\n              && (item = { ...item, completed: !item.completed });\n\n              return item;\n            }),\n\n            sortState: 'All',\n          })));\n\n      default:\n        return this.state.todoItemsArr;\n    }\n  }\n\n  handleDestroyComleted = () => {\n    this.setState(prevState => ({\n      todoItemsArr: prevState.todoItemsArr.filter(item => !item.completed),\n\n      allCompleted: false,\n    }));\n  }\n\n  handleSort = (state) => {\n    this.setState((prevState) => {\n      switch (state) {\n        case 'Active':\n          return ({\n            sortedTodoItemsArr: [...prevState.todoItemsArr]\n              .filter(item => !item.completed),\n            sortState: 'Active',\n          });\n\n        case 'Completed':\n          return ({\n            sortedTodoItemsArr: [...prevState.todoItemsArr]\n              .filter(item => item.completed),\n            sortState: 'Completed',\n          });\n\n        default:\n          return ({\n            sortedTodoItemsArr: prevState.todoItemsArr,\n            sortState: 'All',\n          });\n      }\n    });\n  }\n\n  handleEdit = (id) => {\n    this.setState(prevState => ({\n      editingId: id,\n      todoEditValue: prevState.todoItemsArr\n        .find(todo => todo.id === id).title,\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          handleType={this.handleType}\n          handleSubmit={this.handleSubmit}\n          todoValue={this.state.todoValue}\n        />\n\n        <Main\n          sortState={this.state.sortState}\n          sortedTodoItemsArr={this.state.sortedTodoItemsArr}\n          todoItemsArr={this.state.todoItemsArr}\n\n          handleAllCompleted={this.handleAllCompleted}\n          allCompleted={this.state.allCompleted}\n          handleItem={this.handleItem}\n          handleEdit={this.handleEdit}\n\n          handleTypeEdit={this.handleTypeEdit}\n          handleSubmitEdit={this.handleSubmitEdit}\n\n          todoEditValue={this.state.todoEditValue}\n          editingId={this.state.editingId}\n        />\n\n        <Footer\n          todoItemsArr={this.state.todoItemsArr}\n\n          handleSort={this.handleSort}\n          handleDestroyComleted={this.handleDestroyComleted}\n\n          sortState={this.state.sortState}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}