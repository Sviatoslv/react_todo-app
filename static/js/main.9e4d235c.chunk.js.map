{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/TodoItems.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","state","todoValue","handleType","event","_this","setState","target","value","isExistingAndUnique","arr","some","item","title","handleSubmit","preventDefault","todoObj","id","completed","prevState","props","todoItemsArr","writeNewTodo","this","react_default","a","createElement","className","onSubmit","name","onChange","placeholder","React","Component","TodoItem","todoEditValue","editingId","handleEdit","todo","handleTypeEdit","handleSubmitEdit","_this$props","rewriteExistingTodo","_this2","_this$props2","handleCompletedOrDestroy","_this$state","classes","onDoubleClick","type","checked","htmlFor","onClick","TodoItems","currentArr","sortState","sortedTodoItemsArr","map","components_TodoItem","key","Main","todoItems","components_TodoItems","style","display","allCompleted","handleAllCompleted","Footer","handleSort","handleDestroyComleted","itemsLeft","filter","length","numberOfComleted","footerClass","href","undefined","App","Object","objectSpread","concat","toConsumableArray","components_Header","components_Main","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9e4d235c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state={\n    todoValue: '',\n  }\n\n  handleType = (event) => {\n    this.setState({\n      todoValue: event.target.value,\n    });\n  };\n\n  isExistingAndUnique = (value, arr) => {\n    if (value && !arr.some(item => item.title === value)) {\n      return true;\n    }\n    return false;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const todoObj = {\n      title: this.state.todoValue,\n      id: this.state.todoValue,\n      completed: false,\n    };\n\n    this.setState((prevState) => {\n      if (this.isExistingAndUnique(\n        prevState.todoValue,\n        this.props.todoItemsArr\n      )) {\n        this.props.writeNewTodo(todoObj);\n\n        return ({\n          todoValue: '',\n        });\n      }\n      return ({\n        todoValue: prevState.todoValue,\n      });\n    });\n  }\n\n  render() {\n    const { todoValue } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <input\n            name=\"title\"\n            value={todoValue}\n            onChange={this.handleType}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  writeNewTodo: PropTypes.func.isRequired,\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  state={\n    todoEditValue: '',\n    editingId: '',\n  }\n\n  handleEdit = (id) => {\n    this.setState({\n      editingId: id,\n      todoEditValue: this.props.todo.title,\n    });\n  }\n\n  handleTypeEdit = (event) => {\n    this.setState({\n      todoEditValue: event.target.value,\n    });\n  };\n\n  isExistingAndUnique = (value, arr) => {\n    if (value && !arr.some(item => item.title === value)) {\n      return true;\n    }\n    return false;\n  }\n\n  handleSubmitEdit = (event) => {\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      const { todoEditValue, editingId } = prevState;\n      const { todoItemsArr, rewriteExistingTodo } = this.props;\n\n      if (this.isExistingAndUnique(todoEditValue, todoItemsArr)) {\n        rewriteExistingTodo(todoEditValue, editingId);\n\n        return ({\n          todoEditValue: '',\n          editingId: '',\n        });\n      }\n\n      return ({\n        todoEditValue: prevState.todoEditValue,\n        editingId: '',\n      });\n    });\n  }\n\n  render() {\n    const { todo, handleCompletedOrDestroy } = this.props;\n    const { editingId, todoEditValue } = this.state;\n    let classes = ' ';\n\n    if (todo.completed) {\n      classes = 'completed';\n    }\n\n    if (todo.id === editingId) {\n      classes += ' editing';\n    }\n\n    return (\n      <li\n        onDoubleClick={() => this.handleEdit(todo.id)}\n        className={classes}\n      >\n        <div>\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={() => handleCompletedOrDestroy(todo.id, 'completed')}\n          />\n\n          <label\n            className=\"view\"\n            htmlFor=\"todo-1\"\n          >\n            {todo.title}\n          </label>\n\n          <form onSubmit={this.handleSubmitEdit}>\n            <input\n              name=\"editInput\"\n              className=\"edit\"\n              type=\"text\"\n              value={todoEditValue}\n              onChange={this.handleTypeEdit}\n            />\n          </form>\n\n          <button\n            onClick={() => handleCompletedOrDestroy(todo.id, 'destroy')}\n            type=\"button\"\n            className=\"destroy\"\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleCompletedOrDestroy: PropTypes.func.isRequired,\n  rewriteExistingTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoItems = (props) => {\n  let currentArr = props.todoItemsArr;\n\n  if (props.sortState === 'Completed' || props.sortState === 'Active') {\n    currentArr = props.sortedTodoItemsArr;\n  }\n\n  const todoItem = currentArr.map(todo => (\n    <TodoItem\n      todoItemsArr={props.todoItemsArr}\n      todo={todo}\n      key={todo.id}\n\n      handleCompletedOrDestroy={props.handleCompletedOrDestroy}\n      handleEdit={props.handleEdit}\n\n      handleTypeEdit={props.handleTypeEdit}\n      editingId={props.editingId}\n      rewriteExistingTodo={props.rewriteExistingTodo}\n    />\n  ));\n\n  return (todoItem);\n};\n\nTodoItems.propTypes = {\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortedTodoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleCompletedOrDestroy: PropTypes.func.isRequired,\n  rewriteExistingTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItems from './TodoItems';\n\nfunction Main(props) {\n  const todoItems = (\n    <TodoItems\n      sortState={props.sortState}\n      todoItemsArr={props.todoItemsArr}\n      sortedTodoItemsArr={props.sortedTodoItemsArr}\n\n      handleCompletedOrDestroy={props.handleCompletedOrDestroy}\n      rewriteExistingTodo={props.rewriteExistingTodo}\n    />\n  );\n\n  return (\n    <section className=\"main\" style={{ display: 'block' }}>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={props.allCompleted}\n        onChange={props.handleAllCompleted}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todoItems}\n      </ul>\n    </section>\n  );\n}\n\nMain.propTypes = {\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortedTodoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortState: PropTypes.string.isRequired,\n\n  handleCompletedOrDestroy: PropTypes.func.isRequired,\n  rewriteExistingTodo: PropTypes.func.isRequired,\n\n  handleAllCompleted: PropTypes.func.isRequired,\n  allCompleted: PropTypes.bool.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Footer(props) {\n  const {\n    sortState, handleSort, handleDestroyComleted, todoItemsArr,\n  } = props;\n\n  const itemsLeft = todoItemsArr\n    .filter(item => !item.completed).length;\n\n  const numberOfComleted = todoItemsArr\n    .filter(item => item.completed).length;\n\n  let footerClass = 'footer';\n\n  if (todoItemsArr.length < 1) {\n    footerClass += ' hidden';\n  }\n\n  return (\n    <footer className={footerClass}>\n      <span className=\"todo-count\">\n        {itemsLeft}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            onClick={() => handleSort('All')}\n            href=\"#/\"\n            className={sortState === 'All' ? 'selected' : undefined}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handleSort('Active')}\n            href=\"#/active\"\n            className={sortState === 'Active'\n              ? 'selected' : undefined}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={() => handleSort('Completed')}\n            href=\"#/completed\"\n            className={sortState === 'Completed'\n              ? 'selected' : undefined}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: numberOfComleted ? 'block' : 'none' }}\n        onClick={handleDestroyComleted}\n      >\n        {' '}\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  sortState: PropTypes.string.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleDestroyComleted: PropTypes.func.isRequired,\n  todoItemsArr: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n  state = {\n    todoItemsArr: [],\n    sortedTodoItemsArr: [],\n    sortState: 'All',\n    allCompleted: false,\n  }\n\n  handleAllCompleted = (event) => {\n    this.setState(prevState => ({\n      todoItemsArr: prevState.todoItemsArr.map(todo => (\n        { ...todo, completed: !prevState.allCompleted }\n      )),\n      allCompleted: !prevState.allCompleted,\n    }));\n  }\n\n  writeNewTodo = (todoObj) => {\n    this.setState(prevState => ({\n      todoItemsArr: [todoObj, ...prevState.todoItemsArr],\n      sortState: 'All',\n    }));\n  }\n\n  rewriteExistingTodo = (title, id) => {\n    this.setState(prevState => ({\n      todoItemsArr: prevState.todoItemsArr.map((todo) => {\n        if (todo.id === id) {\n          todo = { ...todo, title };\n        }\n        return todo;\n      }),\n    }));\n  }\n\n  handleCompletedOrDestroy = (id, type) => {\n    switch (type) {\n      case 'destroy':\n        return (\n          this.setState(prevState => ({\n            todoItemsArr: prevState.todoItemsArr.filter(item => item.id !== id),\n            sortState: 'All',\n          })));\n\n      case 'completed':\n        return (\n          this.setState(prevState => ({\n            todoItemsArr: prevState.todoItemsArr.map((item) => {\n              item.id === id\n              && (item = { ...item, completed: !item.completed });\n\n              return item;\n            }),\n\n            sortState: 'All',\n          })));\n\n      default:\n        return this.state.todoItemsArr;\n    }\n  }\n\n  handleDestroyComleted = () => {\n    this.setState(prevState => ({\n      todoItemsArr: prevState.todoItemsArr.filter(item => (\n        !item.completed\n      )),\n\n      allCompleted: false,\n      sortState: 'All',\n    }));\n  }\n\n  handleSort = (state) => {\n    this.setState((prevState) => {\n      switch (state) {\n        case 'Active':\n          return ({\n            sortedTodoItemsArr: [...prevState.todoItemsArr]\n              .filter(item => !item.completed),\n            sortState: 'Active',\n          });\n\n        case 'Completed':\n          return ({\n            sortedTodoItemsArr: [...prevState.todoItemsArr]\n              .filter(item => item.completed),\n            sortState: 'Completed',\n          });\n\n        default:\n          return ({\n            sortedTodoItemsArr: prevState.todoItemsArr,\n            sortState: 'All',\n          });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          writeNewTodo={this.writeNewTodo}\n          todoItemsArr={this.state.todoItemsArr}\n        />\n\n        <Main\n          sortState={this.state.sortState}\n          sortedTodoItemsArr={this.state.sortedTodoItemsArr}\n          todoItemsArr={this.state.todoItemsArr}\n\n          handleAllCompleted={this.handleAllCompleted}\n          allCompleted={this.state.allCompleted}\n          handleCompletedOrDestroy={this.handleCompletedOrDestroy}\n\n          todoEditValue={this.state.todoEditValue}\n          editingId={this.state.editingId}\n          rewriteExistingTodo={this.rewriteExistingTodo}\n        />\n\n        <Footer\n          todoItemsArr={this.state.todoItemsArr}\n\n          handleSort={this.handleSort}\n          handleDestroyComleted={this.handleDestroyComleted}\n\n          sortState={this.state.sortState}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}